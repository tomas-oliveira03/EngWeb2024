<?xml version="1.0" encoding="UTF-8" ?>

<doc>
    <meta>
        <title>TPC3: Construir páginas em html através do node JS e com dados de um JSON</title>
        <date>2024-02-29</date>
        <author>
            <id>a100657</id>
            <nome>Tomás Oliveira</nome>
        </author>
        <uc>
            <sigla>EW2024</sigla>
            <nome>Engenharia Web</nome>
        </uc>
    </meta>
    <resumo>
        <p>Construir uma página que mostre todos os filmes por nome e que hiperligue para cada um deles.</p>
        <p>Construir páginas individuais para cada um dos filmes.</p>
        <p>Construir uma página que mostre o nome de todos os atores por nome e que hiperligue para cada um deles.</p>
        <p>Construir páginas individuais para cada um dos atores.</p>
        <p>Construir uma página que mostre o nome de todos os géneros de filmes e que hiperligue para cada um deles.</p>
        <p>Construir páginas individuais para cada um dos géneros de filmes.</p>
    </resumo>
    <resultados>
        <resultado>Em primeiro lugar, foi necessário corrigir o dataset, visto que não estava com a estrutura correta para correr. Para isso foi desenvolvido um pequeno programa em Python de modo a resolver esse problema. Para isso foi utilizado a biblioteca re e algumas funcções de manipulação de texto.</resultado>
        <resultado>Em seguida, foi necessário a utilização do JavaScript.</resultado>

        <resultado>1. Para apresentar todos os nomes dos filmes e hiperligar para cada um deles, foi necessário a utilização do node.js. Fazemos o seguinte:</resultado>
        <resultado>   - Acedemos ao json através do comando axios.get("http://localhost:3000/filmes").</resultado>
        <resultado>   - Iteramos sobre todos os filmes de modo a escrever em html o seu nome e criar uma hiperligação para o seu id.</resultado>

        <resultado>2. Para apresentar cada filme em específico:</resultado>
        <resultado>   - Acedemos ao input do utilizador através de uma expressão regular que apanha o id do filme.</resultado>
        <resultado>   - Através de axios.get("http://localhost:3000/filmes?_id.$oid=" + id) conseguimos rapidamente aceder a informações específicas de cada filme.</resultado>
        <resultado>   - Indicar o seu nome, género, atores e datas.</resultado>

        <resultado>3. Para apresentar o nome de todos os atores:</resultado>
        <resultado>   - Acedemos ao json através do comando axios.get("http://localhost:3000/filmes").</resultado>
        <resultado>   - Iteramos sobre todos os filmes e criamos um set de modo a colocar, sem repetição o nome de todos os atores.</resultado>
        <resultado>   - Criamos uma hiperligação para cada um deles, através do seu nome.</resultado>

        <resultado>4. Para apresentar a página de cada ator:</resultado>
        <resultado>   - Acedemos ao json através do comando axios.get("http://localhost:3000/filmes").</resultado>
        <resultado>   - Acedemos ao input do utilizador através de uma expressão regular que apanha o nome do ator.</resultado>
        <resultado>   - Iteramos sobre todos os filmes e verificamos se o nome do ator está presente no filme.</resultado>

        <resultado>5. Para apresentar o nome de todos os géneros de filmes:</resultado>
        <resultado>   - Acedemos ao json através do comando axios.get("http://localhost:3000/filmes").</resultado>
        <resultado>   - Iteramos sobre todos os filmes e criamos um set de modo a colocar, sem repetição o nome de todos os géneros de filmes.</resultado>
        <resultado>   - Criamos uma hiperligação para cada um deles, através do seu nome.</resultado>

        <resultado>6. Para apresentar a página de cada género de filme:</resultado>
        <resultado>   - Acedemos ao json através do comando axios.get("http://localhost:3000/filmes").</resultado>
        <resultado>   - Acedemos ao input do utilizador através de uma expressão regular que apanha o nome do género.</resultado>
        <resultado>   - Iteramos sobre todos os filmes e verificamos se o nome do género está presente no filme.</resultado>

        <resultado>7. Para apresentar a página "Menu":</resultado>
        <resultado>   - Criei uma hiperligação para cada uma das páginas anteriores.</resultado>

        <resultado>8. Para apresentar a página "Erro":</resultado>
        <resultado>   - Criei uma página que mostra o tipo de erro encontrado.</resultado>

        <resultado>Rodar o programa</resultado>
        <resultado>Para rodar o programa faça em terminais diferentes:</resultado>
        <resultado>1. json-server --watch filmes-fixed.json</resultado>
        <resultado>2. node server.js</resultado>

        <resultado>Fazendo isso, irá aparecer no output do terminal 2., a seguinte mensagem:</resultado>
        <resultado>Servidor à escuta na porta 2602...</resultado>
        <resultado>Onde poderá abrir o link e iniciar a navegação pelos vários filmes.</resultado>

    </resultados>
</doc>