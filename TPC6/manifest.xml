<?xml version="1.0" encoding="UTF-8" ?>

<doc>
    <meta>
        <title>TPC6: Compositores de Música</title>
        <date>2024-04-04</date>
        <author>
            <id>a100657</id>
            <nome>Tomás Oliveira</nome>
        </author>
        <uc>
            <sigla>EW2024</sigla>
            <nome>Engenharia Web</nome>
        </uc>
    </meta>
    <resumo>
        <p>Criar uma aplicação para a gestão de uma base de dados de compositores musicais através do express e MongoDB:</p>
        <p>1. Montar a API de dados com o json-server a partir do dataset de compositores em anexo;</p>
        <p>2. Criar uma aplicação Web com as seguintes caraterísticas:</p>
        <p>2.1. CRUD sob re compositores;</p>
        <p>2.2. CRUD sobre periodos musicais.</p>
        <p>3. Que aceda através do docker à base de dados em mongoDB.</p>
        <p>3. Investigar e inserir pelo menos 5 compositores do período moderno ou serialista.</p>
    </resumo>
    <resultados>
        <resultado>Para construir o programa em primeiro lugar foi necessário utilizar o mongoDB juntamente com o docker para aceder ao nosso json. Para além disso, decidi adicionar um outro dicionario json chamdao periodos, visto que será necessário para o futuro.</resultado>

        <resultado>Como é necessário seguir o método CRUD decidi:</resultado>
        <resultado>Para os compositores e para os períodos a ideologia é mesma logo irei explicar os dois juntos.</resultado>


        <resultado>1. Método Retreive all</resultado>
        <resultado>    - Para ler, utilizar .find().</resultado>
        <resultado>    - De seguida, decidi aceder às views, e através do que foi lido anteriormente criar uma página web que mostre o conteúdo lido.</resultado>


        <resultado>2. Método Retreive one</resultado>
        <resultado>    - Para ler, utilizar .findOne({id : id}).</resultado>
        <resultado>    - De seguida, através do id apresentado, irei aceder a um template e mostrar informações acerca daquele id específico.</resultado>

        <resultado>3. Método Delete</resultado>
        <resultado>    - Para eliminar, utilizar .deleteOne({id : id}).</resultado>
        <resultado>    - De seguida, apresentar uma página que indica se foi ou não possível eliminar o determinado id.</resultado>

        <resultado>4. Método Update</resultado>
        <resultado>    - Para ler o que o user insere, utilizar findOne({id : id}).</resultado>
        <resultado>    - De seguida, apresentar uma página forms onde o utilizador pode alterar os dados que pretender.</resultado>
        <resultado>    - Para atualizar usar .findOneAndUpdate({id : id}, data, {new : true}).</resultado>

        <resultado>5. Método Create</resultado>
        <resultado>    - Para ler o que o user insere, utilizar .find().</resultado>
        <resultado>    - De seguida, apresentar uma página forms onde o utilizador pode inserir os dados que pretender.</resultado>
        <resultado>    - Para atualizar usar .save().</resultado>

        <resultado>Existem vários detalhes neste programa, por exemplo, ao inserir um compositor, na secção dos períodos, foi gerado um botão de dropdown onde é possível selecionar um dos períodos existentes no ficheiro json. Para além disso, existe em cada uma das páginas sempre uma anchor tag para redirecionar o utilizador para o índice, página principal, se pretender.</resultado>

        <resultado>Em relação a esta versão, é praticamente tudo igual ao tpc anterior, a única diferença é que usamos o express e o mongoDB para gerarmos as templates em .pug e redirecionamos para cada um deles, tornando este processo muito mais fácil e prático.</resultado>

        <resultado>Rodar o programa</resultado>
        <resultado>Para rodar o programa faça:</resultado>
        <resultado>1. Rodar o Docker e carregar os ficheiros .json</resultado>
        <resultado>2. npm start</resultado>

        <resultado>Fazendo isso, irá aparecer no output do terminal 2., a seguinte mensagem:</resultado>
        <resultado>Servidor à escuta na porta 3340...</resultado>
        <resultado>Onde poderá abrir o link e iniciar a navegação pelos vários compositores e seus períodos.</resultado>

    </resultados>
</doc>